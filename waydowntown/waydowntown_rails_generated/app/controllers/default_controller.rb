# Games API
#
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
# The version of the OpenAPI document: 1.0.0
# Generated by: https://github.com/openapitools/openapi-generator.git
#
class DefaultController < ApplicationController
  def answers_post
    # Your code here

    render json: { 'message' => 'yes, it worked' }
  end

  def games_id_get
    game = Game.find_by(id: params[:id])

    if game
      render json: game_json(game)
    else
      render json: { error: 'Game not found' }, status: :not_found
    end
  end

  def games_post
    # Your code here

    render json: { 'message' => 'yes, it worked' }
  end

  private

  def game_json(game)
    {
      data: {
        id: game.id,
        type: 'games',
        relationships: {
          incarnation: {
            links: {
              related: "#{Rails.application.routes.default_url_options[:host]}/api/v1/incarnations/#{game.incarnation.id}"
            },
            data: {
              type: 'incarnations',
              id: game.incarnation.id
            }
          }
        }
      },
      included: [incarnation_json(game.incarnation)] + region_tree_json(game.incarnation.region),
      meta: {}
    }
  end

  def incarnation_json(incarnation)
    {
      id: incarnation.id,
      type: 'incarnations',
      attributes: {
        concept: incarnation.concept,
        mask: incarnation.mask
      },
      relationships: {
        region: {
          links: {
            related: "#{Rails.application.routes.default_url_options[:host]}/api/v1/regions/#{incarnation.region.id}"
          },
          data: {
            type: 'regions',
            id: incarnation.region.id
          }
        }
      }
    }
  end

  def region_json(region)
    {
      id: region.id,
      type: 'regions',
      attributes: {
        name: region.name,
        description: region.description
      },
      relationships: {
        parent: if region.parent
                  {
                    links: {
                      related: "#{Rails.application.routes.default_url_options[:host]}/api/v1/regions/#{region.parent.id}"
                    },
                    data: {
                      type: 'regions',
                      id: region.parent.id
                    }
                  }
                else
                  {
                    links: { related: nil },
                    data: nil
                  }
                end
      }
    }
  end

  def region_tree_json(region)
    result = [region_json(region)]
    result += region_tree_json(region.parent) if region.parent
    result
  end
end
